(function(){const h="var(--uke-fill, black)",p="var(--uke-fingertext, white)",f="var(--uke-text, black)",b=`
<svg id="ukeChordSvg" width="90" height="112" viewBox="0 0 90 112" style="font-family: sans-serif; font-size: 11px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title id="title">uke-chord</title>
  <text id="chordName" x="50%" y="16"  text-anchor="middle" style="font-size: 16px;" fill="${f}"></text>
  <defs>
    <circle id="bubble" r="6" transform="translate(1,11)" fill="${h}"/>
    <path id="ex" d="M0,0L8,8m0,-8L0,8" stroke="${h}" stroke-width="1.1" transform="translate(-3,-11)"/>
    <circle id="openString" r="4" fill="none" stroke="${h}" stroke-width="1" transform="translate(1,-7)"/>
    <rect id="diamond" width="14" height="14" transform="translate(1,2),rotate(45)" fill="${h}"></rect>
  </defs>
  <g id="tab">
    <text id="position" x="-6" y="15" text-anchor="end" fill="${f}"></text>
    <g id="frets"></g>
    <g id="strings"></g>
  </g>
</svg>`,m=4,w=20,u=10;function x(d,e,t){t.setAttribute("transform","translate("+d+","+e+")")}function o(d,e){const t=document.createElementNS("http://www.w3.org/2000/svg",d);return Object.keys(e).forEach(s=>{t.setAttribute(s,e[s]+"")}),t}function c(d,e){const t=o("use",e);return t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#"+d),t}class $ extends HTMLElement{connectedCallback(){for(let i=0;i<this.attributes.length;i++)this[this.attributes[i].name]=this.attributes[i].value;this.attachShadow({mode:"open"});const e=document.createElement("template");e.innerHTML=b;const t=e.content.querySelectorAll("*[id]");if(this.$={},t.forEach(i=>{this.$[i.id]=i}),this.frets)this.frets=this.frets?this.frets.split("").slice(0,u):[];else throw Error("frets attribute is required");this.fingers=this.fingers?this.fingers.split(""):[],this.sub=this.parseSub(this.sub),this.size=this.parseSize(this.size),this.r=this.r?this.r.split(""):[],this.barre=this.barre?this.barre.split("").slice(0,u):[],this.barre=this.barre.slice(0,this.frets.length),this.barreSegments=this.parseBarre(this.barre);const s=parseInt(this.position,10);if(this.position=Number.isNaN(s)?null:s,this.name=this.name&&this.name.length>0?this.name:null,this.fretCount=this.parseLength(this.length),this.tabWidth=(this.frets.length-1)*20+2,this.viewBoxWidth=this.tabWidth+30+(this.position?6:0),this.tabHeight=this.fretCount*20,this.viewBoxHeight=this.tabHeight+25+(this.name?25:0),this.tabX=(this.viewBoxWidth-this.tabWidth)/2,this.tabY=12+(this.name?20:0),this.render(),this.hasAttribute("img")){const i=document.createElement("img");i.alt=(this.name?`${this.name} `:"")+"chord",i.title=i.alt,i.src=`data:image/svg+xml;utf8,${encodeURIComponent(e.innerHTML.replace(/\s*(\r\n|\n|\r)\s*/gm,""))}`,this.shadowRoot.appendChild(i)}else this.shadowRoot.appendChild(e.content)}render(){this.showPosition(),this.showName();const e=this.barreSegments||[];for(let t=0;t<this.fretCount+1;t++){const s=o("rect",{x:0,y:t*20,width:this.tabWidth,fill:h,height:2});this.$.frets.appendChild(s)}this.frets.forEach((t,s)=>{const i=s*20,l=o("rect",{x:i,y:0,width:2,fill:h,height:this.tabHeight});if(this.$.strings.appendChild(l),this.r.includes(this.frets.length-s+"")){const n=(parseInt(t)-1)*20,r=c("diamond",{x:i,y:n});this.$.strings.appendChild(r)}if(t==="0"){const n=c("openString",{x:i});this.$.strings.appendChild(n)}else if(t==="x"||t==="X"){const n=c("ex",{x:i});this.$.strings.appendChild(n)}else{const n=parseInt(t,10);if(!(n>0))return;const r=(n-1)*20,a=c("bubble",{x:i,y:r});if(this.$.strings.appendChild(a),this.fingers[s]){const g=o("text",{x:i+1,y:r+15,fill:p,"text-anchor":"middle"});g.innerHTML=this.fingers[s]!=="0"?this.fingers[s]:"",this.$.strings.appendChild(g)}}if(this.sub[s]){const n=this.tabHeight+13,r=o("text",{x:i,y:n,"text-anchor":"middle",fill:f});r.innerHTML=this.sub[s]!=="_"?this.sub[s]:"",this.$.tab.appendChild(r)}}),e.forEach(t=>{const s=t.start*20-5,i=(t.end-t.start)*20+12,l=(t.fret-1)*20+5,n=o("rect",{x:s,y:l,width:i,height:12,fill:h,rx:6,ry:6}),r=this.$.strings.firstChild;r?this.$.strings.insertBefore(n,r):this.$.strings.appendChild(n)}),x(this.tabX,this.tabY,this.$.tab),this.$.ukeChordSvg.setAttribute("width",this.viewBoxWidth*this.size),this.$.ukeChordSvg.setAttribute("height",this.viewBoxHeight*this.size),this.$.ukeChordSvg.setAttribute("viewBox",`0 0 ${this.viewBoxWidth} ${this.viewBoxHeight}`)}showPosition(){const e=this.position;if(e===0){const t=o("rect",{x:0,y:-1,width:this.tabWidth,fill:h,height:4});this.$.frets.appendChild(t)}else e>0&&e<100&&(this.$.position.innerHTML=e)}showName(){this.name&&(this.$.chordName.innerHTML=this.name),this.$.title.innerHTML=this.name||"Tab"}parseSub(e){let t;return e?(e.indexOf(",")>0?t=this.sub.split(","):t=this.sub.split(""),t||[]):[]}parseSize(e){let t=1;return e==="L"||e==="l"?t=1.8:parseFloat(e)>0&&(t=e),t}parseLength(e){let t=parseInt(e);return(!t||t>w)&&(t=m),t}parseBarre(e){if(!e||!e.length)return[];const t=[];let s=null,i=null;const l=n=>{s!==null&&n-s>=2&&i&&t.push({start:s,end:n-1,fret:i}),s=null,i=null};return e.forEach((n,r)=>{const a=parseInt(n,10);if(!a||a<1){l(r);return}if(s===null){s=r,i=a;return}a!==i&&(l(r),s=r,i=a)}),l(e.length),t}}customElements.define("uke-chord",$)})();
